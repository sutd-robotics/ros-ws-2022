#!/usr/bin/env python3
'''
Shebang: execute as python script
'''

import rospy
from std_msgs.msg import String
'''
rospy:      API to interface with ROS Topics, Services, Parameters
std_msgs:   library containing common message definitions
'''

def callback(data):
    rospy.loginfo(rospy.get_caller_id() + " I heard %s", data.data)
    
def listener():
    rospy.init_node('listener', anonymous = True)
    '''
    rospy.init_node([name: str], [anonymous: bool])
        Defines name of node to communicate to ROS Master
        Anonymous lets ROS to generate unique names when we create multiple instances 
            of the node
    '''

    # Callback function gets run each time a message is received
    rospy.Subscriber("chatter", String, callback)
    '''
    rospy.Subscriber([name: str], [type: msg def], [callback: function]) 
        Create a Subscriber object
        Subscribe to string messages from topic '/chatter', 
            that invokes callback when new message received
    '''

    # spin() keeps Python from exiting until this node is stopped
    rospy.spin()

if __name__ == '__main__':
    listener()
