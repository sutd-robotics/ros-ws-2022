#!/usr/bin/env python3
'''
Shebang: execute as python script
'''

import rospy
from custom_messages.msg import My_msg
'''
rospy:             API to interface with ROS Topics, Services, Parameters
custom_messages:   custom messages package just created
'''

def callback(data):
    rospy.loginfo(rospy.get_caller_id() + " %s's favourite number is %s", data.name, data.fav_num)
    
def listener():
    rospy.init_node('listener', anonymous = True)
    '''
    rospy.init_node([name: str], [anonymous: bool])
        Defines name of node to communicate to ROS Master
        Anonymous lets ROS to generate unique names when we create multiple instances 
            of the node
    '''

    # Callback function gets run each time a message is received
    rospy.Subscriber("chatter", My_msg, callback)
    '''
    rospy.Subscriber([name: str], [type: msg def], [callback: function]) 
        Create a Subscriber object
        Subscribe to string messages from topic '/chatter', 
            that invokes callback when new message received
    '''

    # spin() keeps Python from exiting until this node is stopped
    rospy.spin()

if __name__ == '__main__':
    listener()
